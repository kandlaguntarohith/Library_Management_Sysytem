/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package library_management_sysytem;

import java.util.Calendar;
import javax.swing.JOptionPane;
import javax.swing.JTable;

/**
 *
 * @author rohit
 */
public class ReturnAbook extends javax.swing.JFrame {
    
    User user;
    
    public JTable returntable() {
        return this.bookTable;
    }
    
    public void setTable(JTable table) {
        this.bookTable = table;
    }
    
    public ReturnAbook(User user) {
        this.user = user;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        bookTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        back = new javax.swing.JButton();
        returnbook = new javax.swing.JButton();
        issueId = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(60, 60, 60));

        bookTable.setBackground(new java.awt.Color(255, 255, 255));
        bookTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Issue_id", "Book_Id", "BookName", "Issue_Date", "Return_Date"
            }
        ));
        jScrollPane1.setViewportView(bookTable);

        jLabel1.setBackground(new java.awt.Color(60, 60, 60));
        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("ISSUE ID");

        back.setBackground(new java.awt.Color(125, 112, 152));
        back.setForeground(new java.awt.Color(255, 255, 255));
        back.setText("BACK");
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });

        returnbook.setBackground(new java.awt.Color(125, 112, 152));
        returnbook.setForeground(new java.awt.Color(255, 255, 255));
        returnbook.setText("RETURN BOOK");
        returnbook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                returnbookActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(returnbook, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(90, 90, 90)
                        .addComponent(back, javax.swing.GroupLayout.PREFERRED_SIZE, 328, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(45, 45, 45)
                        .addComponent(issueId, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(445, 445, 445))))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 369, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(issueId)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(returnbook, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(back, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
        dispose();
    }//GEN-LAST:event_backActionPerformed
    private void updateWaitList(Book book) {
        LibraryDatabase database = new LibraryDatabase();
        
        if (database.isWaitListEmpty(book.getBookId())) {
            return;
        }
        Calendar calendar = Calendar.getInstance();
        String issueDate = new Library().getDateFormatString(calendar);
        calendar.add(Calendar.DATE, 7);
        String deadlineDate = new Library().getDateFormatString(calendar);
        int user1 = database.fetchAndDeleteTheMaxPriorityUserFromWaitList(book.getBookId());
        database.addToBookBorrowInfoTable(user1, book.getBookId(), issueDate, deadlineDate);
        database.addToUserUpdates(user1, book.getBookId());
    }
    private void returnbookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_returnbookActionPerformed
        int issueId = Integer.parseInt(this.issueId.getText().trim());
        this.issueId.setText("");
        LibraryDatabase database = new LibraryDatabase();
        if (database.isBookBorrowListcontainsId(issueId)) {
            BookBorrowInfo borrowInfo = database.getFromBookBorrowListBycontainsId(issueId);
            borrowInfo.setActualBookReturnDate();
//        book.clearBorrowedBookinfoId(id);
//        User user = allRegisteredUsers.get(borrowInfo.getUserId());
//        user.removeBorrowedBook(id);
            database.clearBookBorrowInfoById(borrowInfo.getId());
            String message = "Book successfully returned !\n";
            updateWaitList(database.getBookById(borrowInfo.getBookId()));
            if (borrowInfo.getActualReturnDate().after(borrowInfo.getReturnDate())) {
                database.decreaseVipPointsOfUser(borrowInfo.getUserId());
                JOptionPane.showMessageDialog(null, message + "Vip points decreased due to late submission !\n\n");
            } else {
                database.IncreaseVipPointsOfUser(borrowInfo.getUserId());
                JOptionPane.showMessageDialog(null, message + "Vip points Awarded due to timely submission !\n\n");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Invalid IssueId\n\n");
        }
        this.bookTable = database.fetchBorrowedBooksListUser(this.bookTable, user);
        this.bookTable.repaint();

    }//GEN-LAST:event_returnbookActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ReturnAbook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ReturnAbook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ReturnAbook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ReturnAbook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new ReturnAbook().setVisible(true);
//            }
//        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton back;
    private javax.swing.JTable bookTable;
    private javax.swing.JTextField issueId;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton returnbook;
    // End of variables declaration//GEN-END:variables
}
